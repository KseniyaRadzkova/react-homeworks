{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Message","props","className","s","post","ava","src","avatar","alt","angel","text","name","message","time","messageData","HW1","Affair","affair","item","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","filter","active","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onEnter","error","totalUsers","inputClass","errorInput","input","greeting","value","onChange","onKeyDown","onBlur","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2049c595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__1t2ti\",\"ava\":\"Message_ava__1A5Em\",\"angel\":\"Message_angel__32nJY\",\"text\":\"Message_text__1L0bu\",\"name\":\"Message_name__1Vw1a\",\"message\":\"Message_message__2zkt9\",\"time\":\"Message_time__1pm4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3feUL\",\"error\":\"Greeting_error__2jVO-\",\"input\":\"Greeting_input__3I3xk\",\"errorInput\":\"Greeting_errorInput__1DIgH\",\"button\":\"Greeting_button__lUYi9\",\"count\":\"Greeting_count__baPyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__IXpFC\",\"superInput\":\"SuperInputText_superInput__3rqoo\",\"errorInput\":\"SuperInputText_errorInput__bTnbO\",\"error\":\"SuperInputText_error__3vo3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2sR_O\",\"red\":\"SuperButton_red__-np1i\",\"button\":\"SuperButton_button__2eRRG\",\"blink\":\"SuperButton_blink__UIhUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3mOnl\",\"column\":\"HW4_column__1Bab2\",\"testSpanError\":\"HW4_testSpanError__WxhfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3jEBV\",\"checkbox\":\"SuperCheckbox_checkbox__3I4jk\",\"spanClassName\":\"SuperCheckbox_spanClassName__2c86A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1JE5x\"};","import React from 'react'\r\nimport s from './Message.module.css';\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.ava} src={props.avatar} alt = {'avatar'}></img>\r\n            <div className={s.angel}></div>\r\n            <div className={s.text}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\r\n\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <div className={s.item}>{props.affair.name}</div>\r\n            <div className={s.item}>[{props.affair.priority}]</div>\r\n\r\n            <button onClick={deleteCallback} className={s.item + ' ' + s.button}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter(\"all\")\r\n    }\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter(\"middle\")\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    }\r\n\r\n    // const set = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => props.setFilter(e.currentTarget.value as FilterType)\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={props.filter === \"all\" ? s.active : \"\"} onClick={setAll}>All</button>\r\n            <button className={props.filter === \"high\" ? s.active : \"\"} onClick={setHigh}>High</button>\r\n            <button className={props.filter === \"middle\" ? s.active : \"\"} onClick={setMiddle}>Middle</button>\r\n            <button className={props.filter === \"low\" ? s.active : \"\"} onClick={setLow}>Low</button>\r\n\r\n            {/*<button value={\"all\"} onClick={set}/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else if (filter === 'low') {\r\n        return affairs.filter(t => t.priority === 'low')\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(t => t.priority === 'middle')\r\n    } else if (filter === 'high') {\r\n        return affairs.filter(t => t.priority === 'high')\r\n    } else {\r\n    }\r\n    return []\r\n    // else return affairs.filter( t => t.priority === filter)\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, onEnter, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.errorInput : s.input// need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div>\r\n                <input value={name}\r\n                       onChange={setNameCallback}\r\n                       className={inputClass}\r\n                       onKeyDown={onEnter}\r\n                       onBlur={setNameCallback}\r\n                />\r\n                <div className={s.error}>{error}</div>\r\n            </div>\r\n            <button className={s.button} onClick={addUser} disabled={!name}>add</button>\r\n            <div className={s.count}>{totalUsers}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmedName = e.currentTarget.value.trim();\r\n        if (trimmedName) {\r\n            setName(trimmedName) // need to fix\r\n            error && setError('')\r\n        } else {\r\n            name && setName('')\r\n            setError('name is require!')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello  ${name}!`) // need to fix\r\n        setName('')\r\n    }\r\n\r\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && name) {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onEnter={onEnter}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user =  { _id: v1(), name}\r\n        setUsers([user ,...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\n\r\nfunction Junior () {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from \"react\";\r\n\r\nfunction JuniorPlus () {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"./Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to ={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}> pre-junior </NavLink>\r\n            <NavLink to ={PATH.JUNIOR} className={s.link} activeClassName={s.active}> junior </NavLink>\r\n            <NavLink to ={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}> junior-plus </NavLink>\r\n            <div className={s.block}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__kbGfs\",\"active\":\"Affairs_active__RO1Yc\",\"button\":\"Affairs_button__1bvqV\",\"item\":\"Affairs_item__2_EFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3YYI5\",\"active\":\"Header_active__1X0HJ\",\"block\":\"Header_block__1106B\",\"header\":\"Header_header__3KC-P\"};"],"sourceRoot":""}